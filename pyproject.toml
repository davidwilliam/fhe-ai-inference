[project]
name = "fhe-ai-inference"
version = "0.1.0"
description = "A Python library for secure neural network inference using Fully Homomorphic Encryption with OpenFHE"
readme = "README.md"
authors = [{ name = "David William Silva", email = "contact@davidwsilva.com" }]
license = { text = "MIT" }
requires-python = ">=3.8"
dependencies = [
    "openfhe==0.9.0",  # Updated from 1.1.2
    "torch==2.6.0",
    "numpy==2.2.4",
]

[project.optional-dependencies]
default = [
    "pytest==8.3.5",
    "pytest-cov==6.1.1",
    "black==25.1.0",
    "ruff==0.11.6",
    "jupyter==1.1.1",
    "pre-commit==3.8.0",
    "hatchling==1.25.0",
]

[project.urls]
Homepage = "https://github.com/davidwilliam/fhe-ai-inference"
Documentation = "https://github.com/davidwilliam/fhe-ai-inference/blob/main/docs"
Repository = "https://github.com/davidwilliam/fhe-ai-inference"
Issues = "https://github.com/davidwilliam/fhe-ai-inference/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.envs.default]
dependencies = [
    "pytest==8.3.5",
    "pytest-cov==6.1.1",
    "black==25.1.0",
    "ruff==0.11.6",
    "jupyter==1.1.1",
    "pdoc==15.0.2",
    "pre-commit==3.8.0",
]

[tool.hatch.envs.default.env-vars]
DYLD_LIBRARY_PATH = "/usr/local/lib"

[tool.hatch.envs.default.scripts]
lint = "ruff check . --fix"
format = "black ."
test = "pytest --cov=fhe_ai_inference --cov-report=term --cov-report=html"
build-docs = "pdoc fhe_ai_inference --output-dir docs"
dev = [
    "ruff check . --fix",
    "black .",
    "pytest --cov=fhe_ai_inference --cov-report=term --cov-report=html",
    "pdoc fhe_ai_inference --output-dir docs",
]
cov = "pytest --cov=fhe_ai_inference --cov-report=xml --cov-report=term-missing"

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "F",      # Pyflakes (syntax errors)
    "E",      # PEP 8 errors
    "W",      # PEP 8 warnings
    "C90",    # McCabe complexity
    "I",      # Import sorting
    "N",      # PEP 8 naming
    "B",      # Bugbear (common pitfalls)
    "RUF100", # Ruff-specific (unused noqa)
]
fixable = ["E", "I", "N", "RUF100"]

[tool.pytest.ini_options]
addopts = "--cov=fhe_ai_inference --cov-report=term --cov-report=html --verbose"
testpaths = ["tests"]

[tool.pdoc]
html = true
output_dir = "docs"
